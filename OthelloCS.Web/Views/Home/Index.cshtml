
<div class="container-fluid shell">

    <div class="row choose-game-mode-view">
        <div class="col-sm-12">
            <h3>Choose Game Mode</h3>
            <ul class="list-inline">
                <li><button class="btn btn-primary game-mode-button" data-game-mode="0">Two Player</button> </li>
                <li><button class="btn btn-primary game-mode-button" data-game-mode="1">Single Player</button> </li>
                <li><button class="btn btn-primary game-mode-button" data-game-mode="2">Learning Mode</button> </li>
            </ul>

        </div>
    </div>

    <div class="row game-view">
        <div class="col-xs-12 demo-toolbar">

            <div class="title col-xs-3">OthelloJS</div>

            <div class="col-xs-9 view-options">
                <label class="checkbox-inline">
                    <input type="checkbox" class="show-move-marks" value=""> Show Move Marking
                </label>

                <label class="checkbox-inline">
                    <input type="checkbox" class="show-logging" value=""> Show Decision Logging
                </label>
            </div>
        </div>

        <div class="row scoreboards-container">
            <div class="col-xs-6 player-1 score-board">
                <p>Player One: <span class="score"></span></p>

            </div>
            <div class="col-xs-6 player-2 score-board">
                <p>Player Two: <span class="score"></span></p>

            </div>
        </div>

        <div class="col-md-12 game-board-container">
            <div class="game-board"></div>
        </div>

        <div class="col-sm-12 logging-container"></div>
    </div>
</div>


@section scripts {
    <script src="~/App/js/ObservableEvent.js"></script>
    <script src="~/App/js/othello.view.js"></script>
    <script src="~/App/js/othello.js"></script>

    <script>
        var match = {
            matchId: "",
            currentPlayer: 1,
            gameMode: 0,
            gameBoard: {},
            players: [],
            init: init,
            onMove: handleOnMove
        }

        View.onGameModeSelect.subscribe( match.init );
        View.onMove.subscribe( match.onMove );

        function init( mode ) {

            var newMatchRequest = {
                PlayerOneName: "Eric",
                PlayerTwoName: "Santa",
                GameMode: mode
            };

            post( "/api/othello/new", newMatchRequest )
                .then(( response ) => {
                    console.log( "SUCCESS: ", response );

                    match.matchId = response.MatchId;
                    match.gameMode = response.GameMode;
                    match.currentPlayer = response.CurrentPlayer;
                    match.gameBoard = response.Gameboard;
                    match.players = response.Players

                    View.updateScoreBoards( response.Players, response.CurrentPlayer );
                    View.renderGameboard( response.Gameboard, [] );
                } );
        }

        function handleOnMove( moveArgs ) {

            var moveRequest = {
                Row: moveArgs.Row,
                Column: moveArgs.Column,
                PlayerNumber: match.currentPlayer,
                MatchId: match.matchId,
                GameMode: match.gameMode,
                Gameboard: match.gameBoard,
                Players: match.players
            };

            post( "/api/othello/move", moveRequest )
                .then(( response ) => {
                    console.log( "MOVE SUCCESS: ", response );

                    if ( response.IsEndOfGame ) {

                    }
                    else {
                        match.currentPlayer = response.Result.CurrentPlayer;
                        match.gameBoard = response.Result.Gameboard;

                        View.updateScoreBoards( response.Players, response.Result.CurrentPlayer );
                        View.renderGameboard( response.Result.Gameboard, response.Result.Captures );
                    }
                } );
        }

        function post( url, data ) {
            return $.ajax( {
                type: 'POST',
                url: url,
                data: JSON.stringify( data ),
                contentType: 'application/json'
            } );
        }
    </script>
}


